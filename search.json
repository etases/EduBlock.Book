[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EduBlock",
    "section": "",
    "text": "This is a book containing reports of EduBlock"
  },
  {
    "objectID": "Plan.html",
    "href": "Plan.html",
    "title": "2  Plan (VI)",
    "section": "",
    "text": "Thời gian: 01/08/2022 - 04/09/2022\nMô tả: Đây là giai đoạn lên ý tưởng và thực hiện prototype đầu tiên cho dự án Học bạ điện tử, với phạm vi của giai đoạn là thực hiện hệ thống trên 1 trường, và thử nghiệm trên nền tảng public blockchain (Dfinity).\nSản phẩm: - Tài liệu yêu cầu - Tài liệu giới thiệu dự án - Tài liệu cấu trúc hệ thống Phase 1 - Hi-Fi Prototype Phase 1"
  },
  {
    "objectID": "Plan.html#phase-2---vượt-chướng-ngại-vật",
    "href": "Plan.html#phase-2---vượt-chướng-ngại-vật",
    "title": "2  Plan (VI)",
    "section": "2.2 Phase 2 - Vượt chướng ngại vật",
    "text": "2.2 Phase 2 - Vượt chướng ngại vật\nThời gian: 05/09/2022 - 30/09/2022\nMô tả: Đây là giai đoạn quan trọng để mở rộng phạm vi của dự án lên quy mô toàn quốc, bao gồm nghiên cứu các công nghệ cần cho việc thiết kế hệ thống phù hợp với quy trình xét học bạ hiện tại.\n\n2.2.1 Task 1 - Mở rộng phạm vi\nMô tả: Mở rộng phạm vi dự án và xây dựng cái tài liệu mới dựa trên các tài liệu từ Phase 1. Chủ yếu là thiết kế mô hình hệ thống cho phạm vi được mở rộng này.\nLưu ý: Phạm vi lần này là mở rộng quy mô lên các Sở Giáo Dục của toàn quốc, và phạm vi học bạ bao gồm các điểm số nhỏ (Kiểm tra miệng, Kiểm tra 15 phút,…).\nSản phẩm: - Tài liệu yêu cầu - Tài liệu giới thiệu dự án theo phạm vi mới - Tài liệu cấu trúc hệ thống Phase 2\n\n\n2.2.2 Task 2 - Thiết kế Backend\nMô tả: Thiết kế hệ thống backend theo phạm vi mới. Tìm hiểu công nghệ Hyperledger Fabric để xây dựng mạng lưới Private Blockchain phù hợp với yêu cầu.\nLưu ý: Nếu không kịp tìm hiểu Hyperledger Fabric hoặc nó không phù hợp thì vẫn có thể thiết kế hệ thống backend dạng MVC với phạm vi của từng Sở Giáo Dục và tìm cách liên kết các Sở Giáo Dục lại thành mạng lưới truyền thông tin.\nSản phẩm - Tài liệu thiết kế Backend - Tài liệu Endpoint của Web API - Hi-Fi Prototype Phase 2 cho Backend\n\n\n2.2.3 Task 3 - Thiết kế Frontend\nMô tả: Thiết kế Backend sử dụng Framework phù hợp cho người lập trình. Mục tiêu là sử dụng Framework để vừa làm nhanh, phù hợp với người lập trình web thuần HTML, CSS và JS mà không có các logic phức tạp và lỗi giao diện.\nLưu ý: Có thể tự thiết kế Fake Web API để thử nghiệm việc kết nối đến Backend.\nGhi chú: Svelte?\nSản phẩm - Tài liệu thiết kế Frontend - Hi-Fi Prototype Phase 2 cho Frontend\n\n\n2.2.4 Task 4 - Mở rộng tính năng nâng cao\nMô tả: Bao gồm sử dụng công nghệ nhận diện để nạp học bạ giấy lên hệ thống.\nLưu ý: Ở Phase này là nghiên cứu tìm cách thêm tính năng, những tính năng trong Task này nếu xét là không kịp thì có thể không làm.\nSản phẩm - Tài liệu và Prototype liên quan"
  },
  {
    "objectID": "Plan.html#phase-3---tăng-tốc",
    "href": "Plan.html#phase-3---tăng-tốc",
    "title": "2  Plan (VI)",
    "section": "2.3 Phase 3 - Tăng tốc",
    "text": "2.3 Phase 3 - Tăng tốc\nThời gian: 01/10/2022 - 31/10/2022\nMô tả: Đây là giai đoạn thực hiện sản phẩm cuối cùng. Bao gồm hoàn thiện Frontend, Backend và các tính năng liên quan; Kết nối Frontend và Backend; Bổ sung tài liệu cài đặt hệ thống.\nSản phẩm - Hệ thống cuối, chưa qua Test - Tài liệu hệ thống - Hướng dẫn cài đặt hệ thống"
  },
  {
    "objectID": "Plan.html#phase-4---về-đích",
    "href": "Plan.html#phase-4---về-đích",
    "title": "2  Plan (VI)",
    "section": "2.4 Phase 4 - Về đích",
    "text": "2.4 Phase 4 - Về đích\nThời gian: 01/11/2022 - 30/11/2022\nMô tả: Đây là giai đoạn test hệ thống và viết báo cáo\nSản phẩm - Hệ thống cuối, đã Test - Tài liệu Testing - Tài liệu hệ thống cuối - Báo cáo dự án"
  },
  {
    "objectID": "Requirement.html",
    "href": "Requirement.html",
    "title": "3  Requirement (Hackathon)",
    "section": "",
    "text": "This is the specification for a student record system that store the student records on the BlockChain network. The system is designed to provide a user-friendly interface for teachers to update their students’ academic records and a full replacement of traditional academic record papers."
  },
  {
    "objectID": "Requirement.html#about-existing-system",
    "href": "Requirement.html#about-existing-system",
    "title": "3  Requirement (Hackathon)",
    "section": "3.2 About Existing System",
    "text": "3.2 About Existing System\nMany high schools in Viet Nam use one of existing online systems to store students’ academic records and notify their parents about recent records, but they still use traditional record papers for post-graduation & university / college enrollment. Therefore, The teachers find it difficult to update their students’ records because they have to update the records on both the online system & the record paper. Moreover, the online system is a centralized system that only the admins and the teachers can see and interact, so there is little transparency for students who want to see their records at any time."
  },
  {
    "objectID": "Requirement.html#user-requirement",
    "href": "Requirement.html#user-requirement",
    "title": "3  Requirement (Hackathon)",
    "section": "3.3 User Requirement",
    "text": "3.3 User Requirement\n\n3.3.1 Main Function\n\nNormal User\n\nRequest Registration\n\nThe user must fill a form of personal information\nThe user must choose a role to request: Student or Teacher\nThe user can send the request form and wait for an admin to review\n\nLogin\n\nThe user must have an account on the system to login\n\n\nStudent\n\nSee Student Records\n\nThe user must login to use this function\nThe user can only see his academic records\n\n\nTeacher\n\nView Class\n\nThe user must login to use this function\nThe user can only see his own classes\nThe user can filter his classes by name or year\n\nView Student\n\nThe user must login to use this function\nThe user can only see his own classes\nThe user can choose a class and see its student\nThe user can filter his students by name\n\nUpdate Student Records\n\nThe user must login to use this function\nThe user can only update students of his classes\nThe user can choose a student and see his academic records\nThe user can update the student’s records\n\n\nAdmin\n\nView Class\n\nThe user must login to use this function\nThe user can see created classes\nThe user can filter the classes by name or year\n\nCreate Class\n\nThe user must login to use this function\nThe user must assign a teacher to the class as a home teacher\nThe user must assign students to the class\n\nView Student\n\nThe user must login to use this function\nThe user can see registered students\nThe user can filter the students by name\n\nView Teacher\n\nThe user must login to use this function\nThe user can see registered teachers\nThe user can filter the teachers by name\n\nReview Registration\n\nThe user must login to use this function\nThe user can see the waiting requests\nThe user can accept or deny a request\nThe user can filter the requests by username or fullname\nFor teacher requests, the user can export a list to give to the On-Chain Admin\n\n\nOn-Chain Admin\n\nAdd/Remove Teachers\n\nThe user must interact with the BlockChain (On-Chain) service to use this function\nThe user can add or remove a list of teachers received from the Admin\n\n\n\n\n\n3.3.2 Non-Function\n\nThe system easy to maintain & upgrade\nThe user interface is clear, idiot-proof, easy to use & friendly\nThe system is available on 24/7"
  },
  {
    "objectID": "Requirement.html#system-requirement",
    "href": "Requirement.html#system-requirement",
    "title": "3  Requirement (Hackathon)",
    "section": "3.4 System Requirement",
    "text": "3.4 System Requirement\n\n3.4.1 System Component\n\n\n\nOverview of System component\n\n\n\n\n\n\n\n\n\nComponent\nDescription\n\n\n\n\nFrontend\nThe interface of the system, responsible for UI/UX\n\n\nOff-Chain Service\nStore the personal information of the user, the registration requests and the details of classes & students\n\n\nOn-Chain Service\nStore the student’s academic records by grade & Allow teachers to update their students’ records\n\n\n\n\n\n3.4.2 Actor Description\n\n\n\n\n\n\n\nActor\nDescription\n\n\n\n\nStudent\nThe smallest actor of the system who can only see his academic records\n\n\nTeacher\nA person who can update the student’s academic records\n\n\nAdmin\nA manager of the system who manage teachers, classes & students\n\n\nOn-Chain Admin\nA subset of Admin who interacts with the On-Chain service\n\n\n\n\n\n3.4.3 Use case diagram\n\n\n\nUse case diagram"
  },
  {
    "objectID": "Requirement.new.html",
    "href": "Requirement.new.html",
    "title": "4  Requirement (CP)",
    "section": "",
    "text": "Without BlockChain\n\n\n\n\nSystem architecture without BlockChain\n\n\n\nWith BlockChain\n\n\n\n\nSystem architecture with BlockChain\n\n\n\n\n\n\n\n\n\nComponent\nDescription\n\n\n\n\nChain Node (CN)\nA node of the blockchain. This stores the records and handles the history and transaction requests from the Request Server (Change/View the score, information, etc.)\n\n\nTrusted Record Service (TRS)\nSimilar to Chain Node, but this is a centralized & trusted (by all nodes) service that stores the records and handles requests from the Request Server\n\n\nRequest Server\nThe off-chain backend of a CN / TRS. This stores the pending requests from the user and is the only way to call a request to the CN / TRS. Each Request Server may have a different way to handle user requests (Voting, Direct Request, etc.)\n\n\nFrontend Server\nProvide the UX/UI for interacting with the Request Server"
  },
  {
    "objectID": "Requirement.new.html#database",
    "href": "Requirement.new.html#database",
    "title": "4  Requirement (CP)",
    "section": "4.2 Database",
    "text": "4.2 Database\n\n\n\nDatabase diagram"
  },
  {
    "objectID": "DesignArticle.VI.html",
    "href": "DesignArticle.VI.html",
    "title": "5  Design Article (VI)",
    "section": "",
    "text": "The number of academic institutions still use manual processes to store and transfer academic records like transcripts and certifications between institutions and to potential organizations, despite the fact that many large institutions are now adopting the modern practice of maintaining electronic academic records.The process can take up to several days, just for students who want to review their own transcripts, so a common transfer for a student can take anywhere from a few weeks to a month. Due to the time required to process and submit appeal requests using the widely used paper method, more serious errors could happen and the process could take several months. In addition to the significant wait time and the possibility of physical damage or loss of records during storage and transportation, there is also the risk of credential tampering by fraudulent parties. The cost of processing time, manual work effort, postage, and transit fees, as well as the storage and shipping of physical records, are also very expensive.\nThe emerging solutions are primarily based on email-based solutions or the transfer of PDF files while remaining limited by nationality, privacy and security barriers. Although the popularity of cryptocurrencies and NFTs has led to the implementation of Blockchain as a host of applications in the financial sector, the field is more diverse in both technical and application areas [1]. As distributed applications are increasingly applied in various fields such as data storage (including handling medical records and healthcare [2,5]), Cloud and Grid Computing [3], e-vote [4] , Service for IoT [6], Banking system[7] and foremost is the field of Education. Academic institutions can benefit from blockchain technology to provide a decentralized and immutable ledger to confirm the integrity of academic records [10]. Then, solutions for storing and anti-fraud of online electronic degrees have also been conceived to bring the initial benefits of applying Blockchain technology [8][9]. While these solutions provide a more modern approach to the storage and the transfer of academic records, there are still limitations in terms of widespread adoption, auditability, and scalability. A successful solution for storing and exchanging electronic school records will include Security and Privacy, Scalability and at the same time benefit from the advantages of blockchain technology as Distributed, Transparency further described in Section II.\nThe goal of our proposed system is to address the limitations of existing solutions by utilizing Blockchain technology to provide a secure, verifiable, and tamper-proof method of storing, accessing, managing, and exchanging electronic school records between institutions. Part II will go over the technologies involved. Part III presents our proposed solution and design, and Section IV provides concluding remarks."
  },
  {
    "objectID": "DesignArticle.VI.html#state-of-the-art",
    "href": "DesignArticle.VI.html#state-of-the-art",
    "title": "5  Design Article (VI)",
    "section": "5.2 State of the art",
    "text": "5.2 State of the art\nIn terms of digital solutions, in recent years, there have been technologies to manage and store academic records digitally. The biggest disadvantage of the above solutions is the centralization of data, so it will have a big impact if the system crashes, leading to data loss, in addition to the reliability of the data when it is stored by a third party.\nOne of the achievements of the online storage industry is the invention of Blockchain. This is a form of distributed database in which data is stored in a block and connects the blocks in a chain by hashing mechanism [11]. If we consider the solution of digitizing academic records alone, Blockchain has the following advantages [12]:\n\nDecentralized: Data is preserved in many member machines participating in the network. When data is lost, it can be restored from member computers.\nTransparency: The hashing mechanism makes the data in one block verified by other blocks, making the data immutable. Therefore, the data on the Blockchain network is verified, indestructible, and cannot be faked, so it has clarity, transparency, and can be trusted.\nNo third party interference: Data is verified and stored by network members, different from traditional solutions when having to depend on a trusted third party as a storage place.\n\nFor transactions to take place on the Blockchain network, we have a Smart Contract mechanism. This is a pre-programmed set of rules to regulate the conditions and order of execution of a transaction on the Blockchain network, signed by the parties involved, verified by the members of the network, and without interference of third parties. It is used to process data on the network, and also set conditions that limit the execution of operations on data on the network. It is a self-run program on the Blockchain network so it is transparent [13].\nAnother important feature of a record management system is the privacy of students’ personal information, which forces systems to have an authorization feature so that only authorized persons can view student information on transcripts. With Blockchain, there are a number of open source projects to implement the above properties. One of them is Hyperledger Fabric. This is an open-source project from the Hyperledger series about private and permissioned Blockchain. [14]. Unlike public Blockchains like Bitcoin or Etherium, where anyone can participate and make transactions, Fabric network members are registered for attention from a Member Service Provider. The Smart Contract mechanism is extensible to limit the access and data processing rights of members registered in the network. An example of applying Hyperledger Fabric in education storage can be said to be Sony Global Education when they choose to implement a cetification archiving system, which can limit data access for stakeholders [15]. For a solution to digitalize records, we can post a student’s personal information and transcripts online and limit access to and edit records to only the school where the student resides. We can also create a feature that only exports grades from records stored on the network for statistics and analysis."
  },
  {
    "objectID": "DesignArticle.VI.html#approach-concept",
    "href": "DesignArticle.VI.html#approach-concept",
    "title": "5  Design Article (VI)",
    "section": "5.3 Approach & Concept",
    "text": "5.3 Approach & Concept\n\n5.3.1 Centralized\n\n\n\nFigure 5.1: A centralized system\n\n\nFigure 5.1 is an overview of our solution, represented as a centralized system, including:\n\nTrusted Record Service (TRS)\nThis is the center of the system, which will store the records that have been verified by the schools, and the revision history of each record. This center must be trusted by members of the system.\nOnly schools participating in the system can access the center to get records, and only schools associated with the record are authorized to get background information and submit a request to update and correct them.\nRequest Server (RS)\nEach school in the system will be assigned a server to operate on the TRS, which contains a license indicating the school’s identity and the permissions in the TRS.\nThis is also the place to save the transcripts being edited and handle correction requests from users (teachers, students, etc.), including verifying the validity and accuracy of such correction requests, generating a complete transcript from valid requests to submit to the TRS with the license.\nSchools may have different ways of verifying the request for editing records, depending on the specificity of each one. Therefore, the Request Server of a school may be different, but the operation on TRS is the same because the verified transcript must be sent with a license from that school.\nFrontend Server (FS)\nThis is the interactive server for the RS to retrieve, display the school records and send a request to edit the records on an easy-to-see, easy-to-interact interface. It can be part of the management page of the school.\nSince the RS of each school may be different, the interface of the FS may also be different to adapt to the specifics of that school.\n\nThe workflow of the system is shown in Figure 5.2\n\n\n\n\n\n\n\n(a) From requester-view\n\n\n\n\n\n\n\n\n\n(b) From validator-view\n\n\n\n\nFigure 5.2: The sequence diagram of the system\n\n\n“Requester” is the student or teacher, and “Validator” is the homeroom teacher representing the school associated with the record requested to be edited in the Request Server.\n\n\n5.3.2 Decentralized & Multiple schools\n\n\n\nFigure 5.3: A decentralized system with multiple schools\n\n\nWe can extend the system by applying decentralized data technology. Specifically, we can split Trusted Record Service into Chain Nodes and leave Chain Nodes for Schools like Figure 5.3. Now a Chain Node that receives a request to edit records from the Request Server will not only store it on that Chain Node, but will also send that request to neighboring Chain Nodes for storage.\nThis level is often used in private school systems that do not follow the formal school procedures according to the Department of Education, so the authority of the schools is equivalent.\nA system at this level will ensure the security & persistency of academic record data in case a school’s Chain Node goes down. If then, we can use the license from the Request Server to the neighboring Chain Nodes to retrieve the data to restore the collapsed Chain Node. However, the disadvantage is that each Chain Node will have to store a large amount of data from not only the school holding that Chain Node but also the data of neighboring Chain Nodes.\n\n\n5.3.3 Mutiple departments\nWe can level up the system to an inter-departmental scale so that each Chain Node will be maintained by each educational department like Figure 5.4.\n\n\n\nFigure 5.4: A inter-departmental decentralized system\n\n\nIn this system, the Chain Node will be initilized by a party trusted by the departments (usually the Ministry of Education), and those departments will issue licenses to operate on the Chain Node to the Request Server of schools belonging to that department.\nThe system at this level can be applied in regular schools, where the update of records follows a strict process from departments to schools. This is also the most trusted system that can be used for online admission to the above schools because records at this level are guaranteed by both the school and the relevant educational department."
  },
  {
    "objectID": "DesignArticle.VI.html#conclusion",
    "href": "DesignArticle.VI.html#conclusion",
    "title": "5  Design Article (VI)",
    "section": "5.4 Conclusion",
    "text": "5.4 Conclusion\nIn this study, we presented a solution for managing and storing electronic academic records as a replacement for the traditional academic record based on distributed storage technology used by Blockchain, where the data is stored in a block and the blocks are connected on a chain by hashing.Our network enables us to manage data in the network using transactions via smart contracts. From there next, we show how to set up a multi-tier network and processes. Our network enables us to decentralize organizations and system users through arranging chain nodes, verifying transactions with smart contracts, archiving modification history and restoring data of a node using data from other nodes.\nFrom this design, it can be concluded and proposed to organize a Permissioned Blockchain network with a multi-tier design. The main advantage of applying Permissioned Blockchain technology is its resistance to many threats and cyber attacks, rely on the hashing mechanism and the nodes on the Blockchain can prevent data breaches. And moreover, it offers a host of unique features such as improved reliability, better fault tolerance, faster and more efficient operation, and scalability.\nAnd thus, the management of documents for the field of education has the potential to be significantly impacted by the integration of Blockchain, the hyperledger framework, and smart contract technologies across academic records."
  },
  {
    "objectID": "DesignArticle.VI.html#nguồn-tham-khảo",
    "href": "DesignArticle.VI.html#nguồn-tham-khảo",
    "title": "5  Design Article (VI)",
    "section": "5.5 Nguồn tham khảo",
    "text": "5.5 Nguồn tham khảo\n[1] M. Walport, Distributed ledger technology: Beyond Blockchain, UK Government Office for Science (2016).\n[2] Duong-Trung, N., Son, H. X., Le, H. T., & Phan, T. T. (2020). Smart Care. Proceedings of the 2020 4th International Conference on Cryptography, Security and Privacy. https://doi.org/10.1145/3377644.3377667\n[3] Liang, Xueping & Shetty, Sachin & Tosh, Deepak & Kamhoua, Charles & Kwiat, Kevin & Njilla, Laurent. (2017). ProvChain: A Blockchain-Based Data Provenance Architecture in Cloud Environment with Enhanced Privacy and Availability. 10.1109/CCGRID.2017.8.\n[4] Vanita Jain, Akanshu Raj & Abhishek Tanwar & Mridul Khurana. “eVote – A Decentralized Voting Platform”. Digital Twin Technology, CRC Press, 2021.\n[5] Mettler, M. (2016). Blockchain technology in healthcare: The revolution starts here. 2016 IEEE 18th International Conference on e-Health Networking, Applications and Services (Healthcom). doi:10.1109/healthcom.2016.7749510\n[6] Samaniego, M., & Deters, R. (2016). Blockchain as a Service for IoT. 2016 IEEE International Conference on Internet of Things (iThings) and IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical and Social Computing (CPSCom) and IEEE Smart Data (SmartData). doi:10.1109/ithings-greencom-cpscom-smartdata.2016.102\n[7] Chowdhury, M. , Suchana, K. , Alam, S. and Khan, M. (2021) Blockchain Application in Banking System. Journal of Software Engineering and Applications, 14, 298-311. doi: 10.4236/jsea.2021.147018.\n[8] Ghaffar, A., & Hussain, M. (2019). BCEAP - A Blockchain Embedded Academic Paradigm to Augment Legacy Education through Application. Proceedings of the 3rd International Conference on Future Networks and Distributed Systems - ICFNDS ’19. doi:10.1145/3341325.3342036\n[9] Vidal, F. R., Gouveia, F., & Soares, C. (2020). Revocation Mechanisms for Academic Certificates Stored on a Blockchain. 2020 15th Iberian Conference on Information Systems and Technologies (CISTI). doi:10.23919/cisti49556.2020.9141088\n[10] M. Sharples and J. Domingue, “The Blockchain and Kudos: A Distributed System for Educational Record, Reputation and Reward,” in 11th European Conference on Technology Enhanced Learning, Lyon, France, 2016.\n[11] Nofer, M., Gomber, P., Hinz, O., & Schiereck, D. (2017). Blockchain. Business & Information Systems Engineering, 59(3), 183–187. doi:10.1007/s12599-017-0467-3 \n[12] Lu, Y. (2019). The Blockchain: State-of-the-Art and Research Challenges. Journal of Industrial Information Integration. doi:10.1016/j.jii.2019.04.002 \n[13] Singh, A., Parizi, R. M., Zhang, Q., Choo, K.-K. R., & Dehghantanha, A. (2019). Blockchain Smart Contracts Formalization: Approaches and Challenges to Address Vulnerabilities. Computers & Security, 101654. doi:10.1016/j.cose.2019.101654 \n[14] Androulaki, E., Manevich, Y., Muralidharan, S., Murthy, C., Nguyen, B., Sethi, M., … Laventman, G. (2018). Hyperledger fabric. Proceedings of the Thirteenth EuroSys Conference on - EuroSys ’18. doi:10.1145/3190508.3190538 \n[15] “Sony Global Education Develops Technology Using Blockchain for Open Sharing of Academic Proficiency and Progress Records”. Sony Group Portal - Sony Global Headquarters, http://www.sony.com/en/SonyInfo/News/Press/201602/16-0222E/index.html."
  },
  {
    "objectID": "Fabric.RoadMap.html",
    "href": "Fabric.RoadMap.html",
    "title": "6  Hyperledger Fabric - Road Map",
    "section": "",
    "text": "Wiki\nShort Version\nSimplilearn\nDemystifying Hyperledger Fabric\n\nPart 1\nPart 2\nPart 3"
  },
  {
    "objectID": "Fabric.RoadMap.html#develop-chaincode-smart-contract-w-java",
    "href": "Fabric.RoadMap.html#develop-chaincode-smart-contract-w-java",
    "title": "6  Hyperledger Fabric - Road Map",
    "section": "6.2 Develop Chaincode (Smart Contract) /w Java",
    "text": "6.2 Develop Chaincode (Smart Contract) /w Java\n\nWriting Your First Chaincode\nRunning a Fabric Application\n\nSource code (Asset Transfer)\n\nFabcar (Chaincode)\nSecured asset transfer\n\nSource code (Go)\n\nUsing Private Data\n\nSource code\n\nABStore"
  },
  {
    "objectID": "Fabric.RoadMap.html#setup-network-w-minifabric",
    "href": "Fabric.RoadMap.html#setup-network-w-minifabric",
    "title": "6  Hyperledger Fabric - Road Map",
    "section": "6.3 Setup Network /w Minifabric",
    "text": "6.3 Setup Network /w Minifabric\n\nPlaylist\nDocs\nDeploying a production network\n\nOnly for reference"
  },
  {
    "objectID": "Fabric.RoadMap.html#develop-client-w-java",
    "href": "Fabric.RoadMap.html#develop-client-w-java",
    "title": "6  Hyperledger Fabric - Road Map",
    "section": "6.4 Develop Client /w Java",
    "text": "6.4 Develop Client /w Java\n\nFabcar (Client)\nFabric Gateway SDK\n\nJavadocs\nReference\n\nAsset Transfer"
  },
  {
    "objectID": "TestReport.Backend.html",
    "href": "TestReport.Backend.html",
    "title": "7  Test Report - Backend",
    "section": "",
    "text": "Passed: True/False\nPriority: 1-5 (low - high)\nType: Account/Classroom/Record/Updater/…\n\n\n\n\nDescription\n\n\n\n\nStep 1\nStep 2\n…\n\n\n\n\nExpected Value\n\n\n\nActual Value"
  }
]